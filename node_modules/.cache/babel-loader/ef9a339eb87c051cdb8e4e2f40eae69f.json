{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-04-images/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Modal from \"./components/Modal\";\nimport Searchbar from \"./components/Searchbar\";\nimport Button from \"./components/Button\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Loader from \"./components/Loader\";\nimport { Api } from \"./shared/service/Api\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  pictures: [],\n  isLoading: false,\n  error: false,\n  finish: false,\n  showModal: false,\n  largeImageURL: \"\",\n  tags: \"\"\n};\n\nconst App = () => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState(\"\");\n  const [state, setState] = useState(initialState);\n\n  const onChangeQwery = query => {\n    setQuery(query);\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    setState({\n      pictures: [],\n      isLoading: true,\n      finish: false\n    });\n    fetchPictures();\n  }, [query]);\n  useEffect(() => {\n    if (!query) return;\n    fetchPictures();\n  }, [page]);\n\n  const fetchPictures = async () => {\n    try {\n      const {\n        data\n      } = await Api.searchPictures(page, query);\n      setState(_ref => {\n        let {\n          pictures\n        } = _ref;\n        const newState = {\n          pictures: [...pictures, ...data.hits],\n          isLoading: false,\n          error: false\n        };\n\n        if (data.hits.length < 11) {\n          newState.finish = true;\n        }\n\n        if (!data.hits.length) {\n          newState.error = true;\n        }\n\n        return newState;\n      });\n    } catch (error) {\n      setState({\n        isLoading: false,\n        error\n      });\n    }\n  };\n\n  const {\n    pictures,\n    error,\n    isLoading,\n    finish,\n    showModal,\n    largeImageURL,\n    tags\n  } = state;\n\n  const loadMore = () => {\n    setPage(prevState => {\n      return prevState + 1;\n    }); //state.isLoading = true;\n\n    setState({ ...state\n    });\n  };\n\n  const handleOpenModal = id => {\n    // setState((prevState) => {\n    //   const { pictures } = prevState;\n    const {\n      largeImageURL\n    } = pictures.find(picture => picture.id === id); // prevState.showModal = true;\n    // prevState.largeImageURL = largeImageURL;\n    // prevState.tags = tags;\n\n    setState({ ...state,\n      largeImageURL,\n      showModal: true //return { ...prevState };\n\n    });\n  };\n\n  const closeModal = () => {\n    setState(_ref2 => {\n      let {\n        showModal\n      } = _ref2;\n      return { ...state,\n        showModal: !showModal\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      onSubmit: onChangeQwery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Impossible to load more pictures!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), !error && /*#__PURE__*/_jsxDEV(ImageGallery, {\n      pictures: pictures,\n      onClick: handleOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 18\n    }, this), !finish && pictures.length !== 0 && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: loadMore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 44\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: largeImageURL,\n        alt: tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"plBVkukRydCFHd/e2hKRPsyjIFE=\");\n\n_c = App;\nexport default App; // App.js:\n// Функцию fetchPictures лучше создавать внутри первого аргумента useEffect, а не внутри компонента, чтобы не создавать ее при каждом рендере.\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-04-images/src/App.js"],"names":["useState","useEffect","Modal","Searchbar","Button","ImageGallery","Loader","Api","initialState","pictures","isLoading","error","finish","showModal","largeImageURL","tags","App","page","setPage","query","setQuery","state","setState","onChangeQwery","fetchPictures","data","searchPictures","newState","hits","length","loadMore","prevState","handleOpenModal","id","find","picture","closeModal"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Modal from \"./components/Modal\";\nimport Searchbar from \"./components/Searchbar\";\nimport Button from \"./components/Button\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Loader from \"./components/Loader\";\n\nimport { Api } from \"./shared/service/Api\";\nimport \"./App.css\";\n\nconst initialState = {\n  pictures: [],\n  isLoading: false,\n  error: false,\n  finish: false,\n  showModal: false,\n  largeImageURL: \"\",\n  tags: \"\",\n};\nconst App = () => {\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState(\"\");\n  const [state, setState] = useState(initialState);\n\n  const onChangeQwery = (query) => {\n    setQuery(query);\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    setState({ pictures: [], isLoading: true, finish: false });\n    fetchPictures();\n  }, [query]);\n  useEffect(() => {\n    if (!query) return;\n    fetchPictures();\n  }, [page]);\n\n  const fetchPictures = async () => {\n    try {\n      const { data } = await Api.searchPictures(page, query);\n      setState(({ pictures }) => {\n        const newState = {\n          pictures: [...pictures, ...data.hits],\n          isLoading: false,\n          error: false,\n        };\n        if (data.hits.length < 11) {\n          newState.finish = true;\n        }\n        if (!data.hits.length) {\n          newState.error = true;\n        }\n        return newState;\n      });\n    } catch (error) {\n      setState({\n        isLoading: false,\n        error,\n      });\n    }\n  };\n  const { pictures, error, isLoading, finish, showModal, largeImageURL, tags } =\n    state;\n  const loadMore = () => {\n    setPage((prevState) => {\n      return prevState + 1;\n    });\n    //state.isLoading = true;\n    setState({ ...state });\n  };\n\n  const handleOpenModal = (id) => {\n    // setState((prevState) => {\n    //   const { pictures } = prevState;\n\n    const { largeImageURL } = pictures.find((picture) => picture.id === id);\n    // prevState.showModal = true;\n    // prevState.largeImageURL = largeImageURL;\n    // prevState.tags = tags;\n    setState({\n      ...state,\n      largeImageURL,\n      showModal: true,\n      //return { ...prevState };\n    });\n  };\n\n  const closeModal = () => {\n    setState(({ showModal }) => {\n      return {\n        ...state,\n        showModal: !showModal,\n      };\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onChangeQwery} />\n      {error && <h1>Impossible to load more pictures!</h1>}\n      {!error && <ImageGallery pictures={pictures} onClick={handleOpenModal} />}\n      {!finish && pictures.length !== 0 && <Button onClick={loadMore} />}\n      {isLoading && <Loader />}\n      {showModal && (\n        <Modal showModal={closeModal}>\n          <img src={largeImageURL} alt={tags} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n// App.js:\n\n// Функцию fetchPictures лучше создавать внутри первого аргумента useEffect, а не внутри компонента, чтобы не создавать ее при каждом рендере.\n"]},"metadata":{},"sourceType":"module"}